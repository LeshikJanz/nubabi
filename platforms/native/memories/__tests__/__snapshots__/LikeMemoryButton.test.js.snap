// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LikeMemoryButton does not render like count even when requested if count is 0 1`] = `
style = Object {
    "borderColor": "#9EABBC",
    "borderBottomWidth": 0,
    "borderLeftWidth": 0,
    "borderRightWidth": 0,
    "borderTopWidth": 0,
    "flexDirection": "row",
    "fontSize": 13,
    "lineHeight": 16,
    "color": "#748294",
    "fontFamily": "SF Pro Text"
}

<View
  style={
    Object {
      "borderBottomWidth": 0,
      "borderColor": "#9EABBC",
      "borderLeftWidth": 0,
      "borderRightWidth": 0,
      "borderTopWidth": 0,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderBottomWidth": 0,
        "borderColor": "#9EABBC",
        "borderLeftWidth": 0,
        "borderRightWidth": 0,
        "borderTopWidth": 0,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#EA3154",
            "fontSize": 16,
          },
          Object {
            "marginRight": 5,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`LikeMemoryButton renders correctly when liked by viewer 1`] = `
style = Object {
    "borderColor": "#9EABBC",
    "borderBottomWidth": 0,
    "borderLeftWidth": 0,
    "borderRightWidth": 0,
    "borderTopWidth": 0,
    "flexDirection": "row"
}

<View
  style={
    Object {
      "borderBottomWidth": 0,
      "borderColor": "#9EABBC",
      "borderLeftWidth": 0,
      "borderRightWidth": 0,
      "borderTopWidth": 0,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderBottomWidth": 0,
        "borderColor": "#9EABBC",
        "borderLeftWidth": 0,
        "borderRightWidth": 0,
        "borderTopWidth": 0,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#EA3154",
            "fontSize": 16,
          },
          Object {
            "marginRight": 5,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`LikeMemoryButton renders correctly when not liked by viewer 1`] = `
style = Object {
    "borderColor": "#9EABBC",
    "borderBottomWidth": 0,
    "borderLeftWidth": 0,
    "borderRightWidth": 0,
    "borderTopWidth": 0,
    "flexDirection": "row"
}

<View
  style={
    Object {
      "borderBottomWidth": 0,
      "borderColor": "#9EABBC",
      "borderLeftWidth": 0,
      "borderRightWidth": 0,
      "borderTopWidth": 0,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderBottomWidth": 0,
        "borderColor": "#9EABBC",
        "borderLeftWidth": 0,
        "borderRightWidth": 0,
        "borderTopWidth": 0,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#748294",
            "fontSize": 16,
          },
          Object {
            "marginRight": 5,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`LikeMemoryButton renders correctly when requested to add count 1`] = `
style = Object {
    "borderColor": "#9EABBC",
    "borderBottomWidth": 0,
    "borderLeftWidth": 0,
    "borderRightWidth": 0,
    "borderTopWidth": 0,
    "flexDirection": "row",
    "fontSize": 13,
    "lineHeight": 16,
    "color": "#748294",
    "fontFamily": "SF Pro Text"
}

<View
  style={
    Object {
      "borderBottomWidth": 0,
      "borderColor": "#9EABBC",
      "borderLeftWidth": 0,
      "borderRightWidth": 0,
      "borderTopWidth": 0,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderBottomWidth": 0,
        "borderColor": "#9EABBC",
        "borderLeftWidth": 0,
        "borderRightWidth": 0,
        "borderTopWidth": 0,
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#EA3154",
            "fontSize": 16,
          },
          Object {
            "marginRight": 5,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "borderBottomWidth": 0,
        "borderColor": "#9EABBC",
        "borderLeftWidth": 0,
        "borderRightWidth": 0,
        "borderTopWidth": 0,
        "color": "#748294",
        "fontFamily": "SF Pro Text",
        "fontSize": 13,
        "lineHeight": 16,
      }
    }
  >
    5
  </Text>
</View>
`;
