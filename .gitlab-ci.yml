image: node:latest

stages:
  - setup
  - test
  - build
  - deploy
  - publish

yarn_install:
  stage: setup
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
        yarn install
      fi
  cache:
    paths:
      - node_modules/
    key: "$CI_COMMIT_REF_NAME"
    untracked: true

set_dev_app_version:
  stage: setup
  script:
    - yarn global add lerna
    - lerna publish --conventional-commits --skip-npm --skip-git --yes
    - export GIT_REVISION_SHORT_SHA=$(git rev-parse --short HEAD)
    - export WEB_BASE_VERSION=$(node -p "require('./platforms/web/package.json').version")
    - export NUBABI_APP_VERSION=$WEB_BASE_VERSION-dev+$CI_PIPELINE_ID.sha.$GIT_REVISION_SHORT_SHA
    - echo "export NUBABI_APP_VERSION=$NUBABI_APP_VERSION" > .env
    - echo "export NUBABI_ENV=development" >> .env
    - echo "Set app version to $NUBABI_APP_VERSION"
  except:
    - master
  artifacts:
    paths:
      - .env

set_prod_app_version:
  stage: setup
  script:
    - yarn global add lerna
    - lerna publish --conventional-commits --skip-npm --skip-git --yes
    - export GIT_REVISION_SHORT_SHA=$(git rev-parse --short HEAD)
    - export WEB_BASE_VERSION=$(node -p "require('./platforms/web/package.json').version")
    - export NUBABI_APP_VERSION=-$WEB_BASE_VERSION+$CI_PIPELINE_ID
    - echo "export NUBABI_APP_VERSION=-$NUBABI_APP_VERSION" > .env
    - echo "export NUBABI_ENV=staging" >> .env
    - echo "Set app version to $NUBABI_APP_VERSION"
  only:
    - master
  artifacts:
    paths:
      - .env

run_tests:
  stage: test
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
        yarn web:test
      fi
  cache:
    paths:
      - node_modules/
    key: "$CI_COMMIT_REF_NAME"
    untracked: true
    policy: pull

build:
  stage: build
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web'; then
        source .env
        yarn web:build
      fi
  dependencies: 
    - set_dev_app_version
    - set_prod_app_version
  artifacts:
    paths:
      - platforms/web/build
  cache:
    paths:
      - node_modules/
    key: "$CI_COMMIT_REF_NAME"
    untracked: true
    policy: pull

deploy_staging:
  stage: deploy
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'platforms/web'; then
        yarn global add firebase-tools
        firebase use --token $FIREBASE_DEPLOY_KEY nubabitest1
        firebase deploy -m "Pipeline $CI_PIPELINE_ID, Build $CI_BUILD_ID, Staging" --non-interactive --token $FIREBASE_DEPLOY_KEY --only hosting
      fi
  environment:
    name: staging
  cache:
    paths:
      - node_modules/
    key: "$CI_COMMIT_REF_NAME"
    untracked: true
    policy: pull
  only:
    - master

deploy_dev:
  stage: deploy
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'platforms/web'; then
        yarn global add firebase-tools
        firebase use --token $FIREBASE_DEPLOY_KEY nubabi-dev
        firebase deploy -m "Pipeline $CI_PIPELINE_ID, Build $CI_BUILD_ID, Development" --non-interactive --token $FIREBASE_DEPLOY_KEY --only hosting
      fi
  environment:
    name: development
  cache:
    paths:
      - node_modules/
    key: "$CI_COMMIT_REF_NAME"
    untracked: true
    policy: pull
  except:
    - master

deploy_graphql:
  stage: deploy
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'platforms/server'; then
        yarn global add serverless
        mkdir ~/.gcloud
        export TERM=xterm
        echo -E "$GCLOUD_KEYFILE_DEV" > ~/.gcloud/keyfile.json
        echo -E "$FIREBASE_ADMIN_KEY_DEV" > ./platforms/server/graphql/nubabitest1-firebase-adminsdk-r7bmb-2f00516d5e.json
        cd platforms/server/graphql && sls deploy -v
      fi
  dependencies: []
  cache:
    paths:
      - node_modules/
    key: "$CI_COMMIT_REF_NAME"
    untracked: true
    policy: pull
  only:
    - master
  variables:
    NUBABI_GRAPHQL_ENDPOINT: https://us-central1-nubabitest1.cloudfunctions.net/handler/graphql

publish:
  stage: publish
  only:
    - master
  script:
    - mkdir ~/.ssh
    - echo "$PUBLISH_SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - git config --global user.name "Gitlab CI"
    - git config --global user.email "gitlab-ci@nubabi.com"
    - git checkout $CI_COMMIT_REF_NAME
    - git pull
    - git remote set-url origin git@gitlab.com:nubabi/mobile.git
    - yarn add lerna
    - yarn release --yes
    - git push --follow-tags origin $CI_COMMIT_REF_NAME

