image: node:latest

stages:
  - set_version
  - test
  - build
  - deploy

cache:
  paths:
    - node_modules/
  key: “$CI_BUILD_REPO-$CI_COMMIT_REF_SLUG”

before_script:
  - >
    if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
      export GIT_REVISION_SHORT_SHA=$(git rev-parse --short HEAD)
      export WEB_BASE_VERSION=$(node -p "require('./platforms/web/package.json').version")
      yarn install
    fi

set_dev_app_version:
  stage: set_version
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
        export NUBABI_APP_VERSION=$WEB_BASE_VERSION-dev+$CI_PIPELINE_ID.sha.$GIT_REVISION_SHORT_SHA
      fi
  except:
    - master

set_prod_app_version:
  stage: set_version
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
        export NUBABI_APP_VERSION=-$WEB_BASE_VERSION+$CI_PIPELINE_ID
      fi
  only:
    - master

run_tests:
  stage: test
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
        yarn web:test
      fi

build:
  stage: build
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'core/\|platforms/web/\|platforms/server/\|libs/graphql-utils'; then
        yarn web:build
      fi
  artifacts:
    paths:
      - platforms/web/build

deploy_staging:
  stage: deploy
  script:
    - >
      if git diff HEAD^ HEAD --name-only|grep 'platforms/web'; then
        yarn global add firebase-tools
        firebase use --token $FIREBASE_DEPLOY_KEY nubabitest1
        firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY --only hosting
      fi
  environment:
    name: staging
